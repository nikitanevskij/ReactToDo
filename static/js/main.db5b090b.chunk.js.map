{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","React","useState","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","value","handleSubmit","preventDefault","onSubmits","id","Math","floor","random","text","onSubmit","className","edit","placeholder","onChange","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","console","log","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA6DeA,MA3Df,SAAkBC,GAChB,MAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWJ,IAAMK,OAAO,MAE9BL,IAAMM,WAAU,WACdF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAACC,GACpBP,EAASO,EAAEC,OAAOC,QAGdC,EAAe,SAACH,GACpBA,EAAEI,iBAEFf,EAAMgB,UAAU,CACdC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMlB,IAGRC,EAAS,KAGX,OACE,sBAAMkB,SAAUR,EAAcS,UAAU,YAAxC,SACGvB,EAAMwB,KACL,qCACE,uBACEC,YAAY,wFACZZ,MAAOV,EACPuB,SAAUhB,EAEViB,IAAKtB,EACLkB,UAAU,oBAEZ,wBAAQK,QAASd,EAAcS,UAAU,mBAAzC,iEAKF,qCACE,uBACEE,YAAY,wFACZZ,MAAOV,EACPuB,SAAUhB,EAEVa,UAAU,aACVI,IAAKtB,IAEP,wBAAQuB,QAASd,EAAcS,UAAU,cAAzC,oECLKM,MAzCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC/C,EAAwBhC,IAAMC,SAAS,CACrCe,GAAI,KACJJ,MAAO,KAFT,mBAAOW,EAAP,KAAaU,EAAb,KAYA,OAAIV,EAAKP,GACA,cAAC,EAAD,CAAUO,KAAMA,EAAMR,UARV,SAACH,GACpBoB,EAAWT,EAAKP,GAAIJ,GACpBqB,EAAQ,CACNjB,GAAI,KACJJ,MAAO,SAMXsB,QAAQC,IAAIN,GACLA,EAAMO,KAAI,SAACC,EAAMC,GAAP,OACf,sBACEhB,UAAWe,EAAKE,WAAa,oBAAsB,WADrD,UAIE,8BAAoBF,EAAKjB,MAAfiB,EAAKrB,IACf,sBAAKM,UAAU,QAAf,UACE,cAAC,IAAD,CACEK,QAAS,kBAAMG,EAAaO,EAAKrB,KACjCM,UAAU,eAEZ,cAAC,IAAD,CACEK,QAAS,kBAAMI,EAAWM,EAAKrB,KAC/BM,UAAU,gBAEZ,cAAC,IAAD,CACEK,QAAS,kBAAMM,EAAQ,CAAEjB,GAAIqB,EAAKrB,GAAIJ,MAAOyB,EAAKjB,QAClDE,UAAU,mBAdTgB,QC2BIE,MAjDf,WACE,MAA0BxC,IAAMC,SAAS,IAAzC,mBAAO4B,EAAP,KAAcY,EAAd,KAkCA,OACE,gCACE,sJACA,cAAC,EAAD,CAAU1B,UAnCE,SAACsB,GACf,GAAKA,EAAKjB,OAAQ,QAAQsB,KAAKL,EAAKjB,MAApC,CAGA,IAAMuB,EAAQ,CAAIN,GAAJ,mBAAaR,IAC3BY,EAASE,OA+BP,cAAC,EAAD,CACEd,MAAOA,EACPC,aA/Be,SAACd,GACpB,IAAI4B,EAAef,EAAMO,KAAI,SAACC,GAI5B,OAHIA,EAAKrB,KAAOA,IACdqB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETI,EAASG,IAyBLb,WAba,SAACf,GAClB,IAAM6B,EAAY,YAAIhB,GAAOiB,QAAO,SAACT,GAAD,OAAUA,EAAKrB,KAAOA,KAE1DyB,EAASI,IAWLb,WAvBa,SAACe,EAAQC,GACrBA,EAAS5B,OAAQ,QAAQsB,KAAKM,EAAS5B,OAG5CqB,GAAS,SAACQ,GAAD,OACPA,EAAKb,KAAI,SAACc,GAAD,OAAWA,EAAKlC,KAAO+B,EAASC,EAAWE,eClB3CC,MARf,WACE,OACE,qBAAK7B,UAAU,WAAf,SACE,cAAC,EAAD,OCFN8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.db5b090b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = React.useState(\"\");\r\n\r\n  const inputRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmits({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"todo-form\">\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder=\"Изменить задачу\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            // name=\"text\"\r\n            ref={inputRef}\r\n            className=\"todo-input edit\"\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button edit\">\r\n            Изменить\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder=\"Добавить задачу\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            // name=\"text\"\r\n            className=\"todo-input\"\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button\">\r\n            Добавить\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = React.useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmits={submitUpdate} />;\r\n  }\r\n  console.log(todos);\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n      key={index}\r\n    >\r\n      <div key={todo.id}>{todo.text}</div>\r\n      <div className=\"icons\">\r\n        <AiOutlineCheckCircle\r\n          onClick={() => completeTodo(todo.id)}\r\n          className=\"check-icon\"\r\n        />\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className=\"delete-icon\"\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className=\"edit-icon\"\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = React.useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n    const newTodos = [todo, ...todos];\r\n    setTodos(newTodos);\r\n  };\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removeArr);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Добавьте новую задачу</h1>\r\n      <TodoForm onSubmits={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import \"./App.css\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}